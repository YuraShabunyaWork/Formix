@model UserAnswerViewModel
<div class="container mb-3">
    <p class="display-6 text-center">Open Answer @Model.Login/@Model.Email</p>
    <div class="row">
        <div class="col-12 col-md-4 d-md-block border border-1 rounded-3 shadow shadow-sm bg-opacity-50 p-4 bg-body-secondary small m-2">
            <div class="d-flex justify-content-center">
                <img id="previewImage"
                     src="@(Model == null ? "/Logo.jpg" : Model.UrlPhoto)"
                     class="img-thumbnail bg-body-secondary rounded-2 border-0 mb-2 object-fit-cover"
                     style="width: 250px; height: 250px; object-position: center;" />
            </div>
            <div class="mb-2">
                <h2 class="form-label text-center">@Model.Title</h2>
            </div>
            <div class="mb-2">
                <p class="form-label">@Model.Description</p>
            </div>
        </div>
        <div class="col-12 col-md border border-1 rounded-3 shadow shadow-sm bg-opacity-50 p-4 bg-body-secondary small m-2">
            @for (int i = 0; i < Model.Questions.Count; i++)
            {
                <label class="form-label">@Model.Questions[i].Title</label>
                @switch (Model.Questions[i].TypeQuestion)
                {
                    case QuestionType.Text:
                        <input value="@Model.Answers[i][0]" type="text" disabled class="form-control" />
                        break;
                    case QuestionType.SingleChoice:
                        @for (int j = 0; j < Model.Questions[i].OptionsAnswer.Count; j++)
                        {
                            <div class="form-check">
                                @if (int.TryParse(Model.Answers[i][0], out int result) && result == j)
                                {
                                    <input class="form-check-input" type="radio" checked disabled />
                                }
                                else
                                {
                                    <input class="form-check-input" type="radio" disabled />
                                }
                                <label class="form-check-label">@Model.Questions[i].OptionsAnswer[j]</label>
                            </div>
                        }
                        break;
                    case QuestionType.MultipleChoice:
                        @for (int j = 0; j < Model.Questions[i].OptionsAnswer.Count; j++)
                        {
                            <div class="form-check">
                                @if (int.TryParse(Model.Answers[i][j], out int result) && result == 1)
                                {
                                    <input disabled checked class="form-check-input" type="checkbox" />
                                }
                                else
                                {
                                    <input disabled class="form-check-input" type="checkbox" />
                                }
                                <label class="form-check-label">@Model.Questions[i].OptionsAnswer[j]</label>
                            </div>
                        }
                        break;
                }
            }
        </div>
    </div>
</div>
