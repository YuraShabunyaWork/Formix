@model ReviewViewModel
@{
    ViewData["Title"] = "Review";
}
<div class="container mt-5" style="width: 400px">
    <div class="text-center">
        <p class="display-6">Review</p>
    </div>
    <div class="border border-1 rounded-3 shadow shadow-sm bg-opacity-50 p-4 bg-body-secondary small">
        <form asp-controller="Answer" asp-action="Review" method="post">
            <input asp-for="TamplateId" type="hidden" />
            <div class="mb-2 d-flex justify-content-center">
                @for (int i = 0; i < 5; i++)
                {
                    <h4>
                        <i class="bi bi-star me-1 star" data-value="@(i + 1)"></i>
                    </h4>
                }
                <input asp-for="Rating" type="hidden" id="ratingInput" />
            </div>
            <div class="mb-2">
                <textarea asp-for="Comment" class="form-control"></textarea>
            </div>
            <div class="text-center m-2">
                <button type="submit" class="btn btn-success">Send</button>
            </div>
        </form>
    </div>
</div>
<script>
    const stars = document.querySelectorAll('.star');
    const ratingInput = document.getElementById('ratingInput');

    stars.forEach(star => {
        star.addEventListener('mouseover', () => setActiveStars(star.getAttribute('data-value')));
        star.addEventListener('click', () => {
            ratingInput.value = star.getAttribute('data-value');
            setActiveStars(ratingInput.value);
        });
        star.addEventListener('mouseout', () => setActiveStars(ratingInput.value));
    });

    function setActiveStars(rating) {
        stars.forEach(star => {
            const isActive = star.getAttribute('data-value') <= rating;
            star.classList.toggle('bi-star-fill', isActive); 
            star.classList.toggle('bi-star', !isActive);  
        });
    }
</script>

