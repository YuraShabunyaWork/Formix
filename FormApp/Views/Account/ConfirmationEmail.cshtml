@model ConfirmationEmailViewModel
@{
    ViewData["TitleForm"] = "Confirmation Email";
}
<div class="container-fluid" style="width: 400px; min-width:300px">
    <div class="text-center">
        <a asp-action="" asp-controller="">
            <img src="~/Logo.jpg" class="rounded-pill mb-2" style="height:15vh" />
        </a>
        <p class="display-6">@Localizer["SignInTo"] <span class="fw-bolder">Formix</span></p>
    </div>
    <div class="border border-1 rounded-3 shadow shadow-sm bg-opacity-50 p-4 bg-body-secondary small">
        <form asp-controller="Account" asp-action="ConfirmationEmail" method="post">
            <input type="hidden" asp-for="Login"/>
            <input type="hidden" asp-for="Email" />
            <input type="hidden" asp-for="Password" />
            <input type="hidden" asp-for="RememberMe" />
            <div class="mb-2">
                <h3 class="text-center mb-4">@Localizer["EnterVerificationCode"]</h3>
                <div class="d-flex justify-content-center gap-2">
                    @for (int i = 0; i < 6; i++)
                    {
                        <input type="text"
                               asp-for="Code[i]"
                               value=""
                               class="form-control text-center code-input"
                               maxlength="1"
                               style="width: 3rem; font-size: 2rem; font-weight: bold;"/>
                    }
                </div>
                <span asp-validation-for="Code" class="text-danger small"></span>
            </div>
            <div class="text-center">
                <button class="btn btn-primary mt-4 d-block mx-auto" type="submit">@Localizer["Submit"]</button>
            </div>
        </form>
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const inputs = document.querySelectorAll('.code-input');

        inputs.forEach((input, index) => {
            input.addEventListener('input', (e) => {
                const value = e.target.value.replace(/[^0-9]/g, '');
                e.target.value = value;

                if (value && index < inputs.length - 1) {
                    inputs[index + 1].focus(); 
                }
            });

            input.addEventListener('keydown', (e) => {
                if (e.key === 'Backspace' && !e.target.value && index > 0) {
                    inputs[index - 1].focus(); 
                }
            });

            input.addEventListener('paste', (e) => {
                e.preventDefault();
                const pasteData = e.clipboardData.getData('text').replace(/[^0-9]/g, '');

                if (pasteData.length === inputs.length) {
                    inputs.forEach((input, i) => {
                        input.value = pasteData[i] || '';
                    });
                    inputs[inputs.length - 1].focus();
                }
            });
        });
    });
</script>